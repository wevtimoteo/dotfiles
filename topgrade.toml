# Include any additional configuration file(s)
# [include] sections are processed in the order you write them
# Files in $CONFIG_DIR/topgrade/topgrade.d/ are automatically included at the beginning of this file
[include]
#paths = ["/etc/topgrade.toml"]

[misc]
# Don't ask for confirmations
assume_yes = false

# Disable specific steps - same options as the command line flag
#             Do not perform upgrades for the given steps [possible values: am, app_man, asdf, atom,
#            dotnet, emacs, firmware, flatpak, flutter, fossil, gcloud, gem, ghcup,
#            github_cli_extensions, git_repos, gnome_shell_extensions, go, guix, haxelib, helm,
#            home_manager, jetpack, julia, juliaup, kakoune, helix, krew, macports, mamba, mas, maza,
#            micro, myrepos, nix, node, opam, pacdef, pacstall, pearl, pip3, pip_review,
#            pip_review_local, pipupgrade, pipx, pkg, pkgin, pnpm, powershell, protonup, raco, rcm,
#            remotes, restarts, rtcl, ruby_gems, rustup, scoop, sdkman, sheldon, shell, snap,
#            sparkle, spicetify, stack, stew, system, tldr, tlmgr, tmux, toolbx, vagrant, vcpkg, vim,
#            winget, wsl, wsl_update, yadm, yarn]
disable = ["git_repos", "node", "yarn", "pip3", "gem", "ruby_gems", "containers"]

# Ignore failures for these steps
#ignore_failures = ["powershell"]

# Run specific steps - same options as the command line flag
#only = ["system", "emacs"]

# Do not ask to retry failed steps (default: false)
no_retry = true

# Sudo command to be used
#sudo_command = "sudo"

# Run `sudo -v` to cache credentials at the start of the run; this avoids a
# blocking password prompt in the middle of a possibly-unattended run.
#pre_sudo = false

# Run inside tmux
run_in_tmux = false

# List of remote machines with Topgrade installed on them
#remote_topgrades = ["toothless", "pi", "parnas"]

# Arguments to pass SSH when upgrading remote systems
#ssh_arguments = "-o ConnectTimeout=2"

# Path to Topgrade executable on remote machines
#remote_topgrade_path = ".cargo/bin/topgrade"

# Arguments to pass tmux when pulling Repositories
#tmux_arguments = "-S /var/tmux.sock"

# Do not set the terminal title
set_title = true

# Display the time in step titles
display_time = true

# Cleanup temporary or old files
cleanup = true

# Skip sending a notification at the end of a run
skip_notify = false

# Whether to self update (this is ignored if the binary has been built without self update support, available also via setting the environment variable TOPGRADE_NO_SELF_UPGRADE)
no_self_update = false

[git]
#max_concurrency = 5
# Additional git repositories to pull
#repos = [
#    "~/src/*/",
#    "~/.config/something"
#]

# Don't pull the predefined git repos
#pull_predefined = false

# Arguments to pass Git when pulling Repositories
#arguments = "--rebase --autostash"

# Commands to run before anything
[pre_commands]
#"Emacs Snapshot" = "rm -rf ~/.emacs.d/elpa.bak && cp -rl ~/.emacs.d/elpa ~/.emacs.d/elpa.bak"

# Custom commands
[commands]
#"Python Environment" = "~/dev/.env/bin/pip install -i https://pypi.python.org/simple -U --upgrade-strategy eager jupyter"
#"Custom command using interactive shell (unix)" = "-i vim_upgrade"

[brew]
greedy_cask = true
autoremove = false

[npm]
# Use sudo if the NPM directory isn't owned by the current user
#use_sudo = true

[firmware]
# Offer to update firmware; if false just check for and display available updates
#upgrade = true
