#!/bin/bash
#
#
# Weverton do Couto Timoteo       me@wolcan.us
#
# 2013-06
# reference: https://github.com/mv/home/blob/master/bash.d/40-aws.sh
#
#
# This file was created to organize
# AWS keys and ENVIRONMENT variables
#
# This is also used auto-scale feature
#

# First pre-req is to setup your X.509 self-signed key

# 1. Generate Private Key
#    create private key
#    openssl genrsa -des3 -out pk.encrypted.key 2048

#    Remove passphrase from encrypted key
#    openssl rsa -in pk.encrypted.key -out pk.key

#    Name private key using AWS name
#    cp pk.key pk-user-aws.pem

# 2. Generate a Certificate Signing Request (CSR)
#    # from the private key, generate a CSR
#    openssl req \
#        -subj '/C=BR/ST=SP/L=SÃ£o Paulo/O=MangaNoMori/OU=DevTeam/CN=Weverton do Couto Timoteo/emailAddress=me@wolcan.us' \
#        -new -key pk.key -out cert.csr
#
#    # using the CSR, create a self-signed key
#    openssl x509 -req -days 365 \
#        -signkey pk.key \
#        -in  cert.csr   \
#        -out cert.crt

#    # Name certificate using AWS name
#    cp cert.crt cert-user-aws.pem
# 3. Use the keys
#    # copy keys to $HOME/.ec2/
#    cp *pem /home/user/.ec2/
#
#    # Upload certifate (i.e., public part of your key) to AWS console IAM
#    # cert-*.pem


# pre-req:
#     brew install ec2-ami-tools
#     brew install ec2-api-tools
#     mkdir ~/.aws && chmod 700 ~/.aws
#
# (this path is only for MacOS)
export JAVA_HOME="$(/usr/libexec/java_home)"

# vars when using aws-sdk
# export   AWS_CREDENTIAL_FILE="$HOME/.aws/aws-credential-file.cfg"

# export     AWS_ACCESS_KEY_ID=$( awk -F= '/AccessKey/ {print $2}' $AWS_CREDENTIAL_FILE )
# export AWS_SECRET_ACCESS_KEY=$( awk -F= '/SecretKey/ {print $2}' $AWS_CREDENTIAL_FILE )

# pre-req for EC2:
#     brew install ec2-ami-tools
#     brew install ec2-api-tools
#     http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/setting-up-your-tools.html
#
#     ec2-version
#     ec2-describe-regions
#     ec2-describe-instances
#     ec2-describe-volumes
export         EC2_HOME="/usr/local/Library/LinkedKegs/ec2-api-tools/jars"
export EC2_AMITOOL_HOME="/usr/local/Library/LinkedKegs/ec2-ami-tools/jars"
# export         EC2_CERT="$(/bin/ls $HOME/.aws/cert-*.pem)"
# export  EC2_PRIVATE_KEY="$(/bin/ls $HOME/.aws/pk-*.pem)"

# Default region
export EC2_REGION=sa-east-1

# Default Service Point
export EC2_URL=https://ec2.sa-east-1.amazonaws.com

# RDS
#     $ brew install rds-command-line-tools
#     http://docs.amazonwebservices.com/AmazonRDS/latest/UserGuide/StartCLI.html
#     rds-version
#     rds-describe-db-instances
#     rds-describe-db-parameters default.mysql5.5
export AWS_RDS_HOME="/usr/local/Cellar/rds-command-line-tools/1.10.003/libexec"

# ELB
#     $ brew install elb-tools
#     http://docs.amazonwebservices.com/ElasticLoadBalancing/latest/DeveloperGuide/UsingTheCommandLineTools.html
#     elb-version
#     elb-describe-lbs
export AWS_ELB_HOME="/usr/local/Library/LinkedKegs/elb-tools/jars"

# AS
#     $ brew install auto-scaling
#     http://docs.amazonwebservices.com/AutoScaling/latest/GettingStartedGuide/SetupCLI.html
#     as-version
#     as-describe-adjustment-types
#     as-describe-process-types
#     as-describe-tags
export AWS_AUTO_SCALING_HOME="/usr/local/Library/LinkedKegs/auto-scaling/jars"

# vim:ft=sh:
